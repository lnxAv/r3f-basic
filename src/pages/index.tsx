import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useTranslation } from 'next-i18next'
import { serverSideTranslations } from 'next-i18next/serverSideTranslations'
import styles from '../@styles/Home.module.css'
import Link from 'next/link'
import XCanvas from '../@components/x-canvas/x-canvas'
import {
  Edges,
  Environment,
  OrbitControls,
  Polyhedron,
  Select,
  Sky,
  Sphere,
} from '@react-three/drei'
import { MeshProps } from '@react-three/fiber'
import { Suspense } from 'react'
import { useGlobalStore } from '../@helpers/store'
import { useGUIControls } from '../@components/x-gui/x-gui'
import { Color, PolyhedronGeometry } from 'three'

function Cube({
  color = 'white',
  thickness = 2,
  roughness = 0.65,
  envMapIntensity = 1,
  transmission = 0,
  metalness = 0,
  ...props
}) {
  const [storeGUI] = useGlobalStore((state) => [state.guiStore])
  const [store, materialProps] = useGUIControls({
    color: { value: color },
    roughness: { value: roughness, min: 0, max: 1 },
    thickness: { value: thickness, min: -10, max: 10 },
    envMapIntensity: { value: envMapIntensity, min: 0, max: 10 },
    transmission: { value: transmission, min: 0, max: 1 },
    ...(metalness !== undefined && {
      metalness: { value: metalness, min: 0, max: 1 },
    }),
  })
  const isSelected = !!store && store?.storeId === storeGUI?.storeId
  return (
    <mesh {...props} userData={{ store }}>
      <boxGeometry />
      <meshPhysicalMaterial {...materialProps} />
      <Edges visible={isSelected} scale={1.1} renderOrder={1000}>
        <meshBasicMaterial transparent color='#333' depthTest={false} />
      </Edges>
    </mesh>
  )
}

const Dodeca = ({ ...props }: MeshProps) => {
  const radius = 2
  const vertices = [
    [1, 1, 1], // 1
    [1, 1, -1], // 2
    [1, -1, 1], // 3
    [1, -1, -1], // 4
    [-1, 1, 1], // 5
    [-1, 1, -1], // 6
    [-1, -1, 1], // 7
    [-1, -1, -1], // 8
    [2, 0, 0], // 9
    [-2, 0, 0], // 10
    [0, 2, 0], // 11
    [0, -2, 0], // 12
    [0, 0, 2], // 13
    [0, 0, -2], // 14
  ].flat()
  const indices = [
    // Top
    12, 2, 0, 8, 0, 2, 12, 6, 2, 11, 2, 6, 12, 4, 6, 9, 6, 4, 12, 0, 4, 10, 4,
    0,
    // Sides
    11, 3, 2, 8, 2, 3, 8, 1, 0, 10, 0, 1, 10, 5, 4, 9, 4, 5, 9, 7, 6, 11, 6, 7,
    // Bottom
    13, 3, 7, 11, 7, 3, 13, 1, 3, 8, 3, 1, 13, 5, 1, 10, 1, 5, 13, 7, 5, 9, 5,
    7,
  ].flat()
  const detail = 0
  //const rhombic_dodeca = new PolyhedronGeometry(vertices,indices,radius,detail)

  return (
    <mesh>
      <Polyhedron {...props} args={[vertices, indices, radius, detail]}>
        <meshPhongMaterial color='black' wireframeLinewidth={5} wireframe />
      </Polyhedron>
      <Sphere scale={[1.5, 1.5, 1.5]}>
        <meshPhongMaterial color='red' wireframeLinewidth={5} wireframe />
      </Sphere>
    </mesh>
  )
}

const Home: NextPage = () => {
  const { t, i18n } = useTranslation('common')
  const [setGUIStore] = useGlobalStore((state) => [state.setGUIStore])

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className={styles.main}>
        <h1>{t(`test`)}</h1>
        <Link href='/' locale='fr'>
          To /fr/another
        </Link>
        <button> test </button>
        <XCanvas
          dpr={[1, 2]}
          orthographic
          camera={{ position: [-10, 10, 10], zoom: 100 }}
        >
          <pointLight position={[10, 10, 10]} />
          <Suspense fallback={null}>
            <Select
              multiple
              box
              onChange={(obj) => {
                setGUIStore(obj[0]?.userData?.store)
              }}
            >
              <Cube
                scale={0.9}
                position={[0, 0, 0]}
                color='#eb8686'
                envMapIntensity={2}
              />
              <Cube
                scale={0.9}
                position={[-1, 0, 0]}
                color='orange'
                transmission={1}
                thickness={-2}
                envMapIntensity={5}
              />
              <Cube
                scale={[1, 0.9, 0.9]}
                position={[0.05, 0, 1]}
                color='aquamarine'
                metalness={0}
              />
            </Select>
          </Suspense>
          <Environment preset='city' />
          <OrbitControls
            makeDefault
            rotateSpeed={2}
            minPolarAngle={0}
            maxPolarAngle={Math.PI / 2.5}
          />
          <Sky />
        </XCanvas>
        <XCanvas
          dpr={[1, 2]}
          orthographic
          camera={{ position: [-10, 10, 10], zoom: 100 }}
        >
          <pointLight position={[10, 10, 10]} />
          <Suspense fallback={null}>
            <Select
              multiple
              box
              onChange={(obj) => {
                setGUIStore(obj[0]?.userData?.store)
              }}
            >
              <Dodeca scale={[1, 1, 1]} position={[0, 0, 0]} />
            </Select>
          </Suspense>
          <Environment preset='city' />
          <OrbitControls
            makeDefault
            rotateSpeed={2}
            minPolarAngle={0}
            maxPolarAngle={Math.PI / 2.5}
          />
          <Sky />
        </XCanvas>
      </main>

      <footer className={styles.footer}>
        <a
          href='https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
          target='_blank'
          rel='noopener noreferrer'
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src='/vercel.svg' alt='Vercel Logo' width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export async function getStaticProps({ locale }: any) {
  return {
    props: {
      ...(await serverSideTranslations(locale, ['common', 'footer'])),
    },
  }
}
export default Home
