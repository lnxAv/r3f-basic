import type { NextPage } from 'next'
import _ from 'lodash'
import Head from 'next/head'
import { useTranslation } from 'next-i18next'
import { serverSideTranslations } from 'next-i18next/serverSideTranslations'
import Link from 'next/link'
import XCanvas from '../../@components/x/x-canvas/x-canvas'
import {
  Edges,
  Environment,
  OrbitControls,
  Select,
  Sky,
} from '@react-three/drei'
import { Suspense } from 'react'
import { useGlobalStore } from '../../@helpers/x-store'
import { useGUIControls } from '../../@components/x/x-gui/x-gui'
import { RhombicDodecaedron } from '../../@components/x/x-shapes/rhombic_dodecahedron'

function TrackedMesh({
  color = 'white',
  thickness = 2,
  roughness = 0.65,
  envMapIntensity = 1,
  transmission = 0,
  metalness = 0,
  ...props
}) {
  const [storeGUI] = useGlobalStore((state) => [state.guiStore])
  const [store, { ...materialProps }] = useGUIControls({
    color: { value: color },
    roughness: { value: roughness, min: 0, max: 1 },
    thickness: { value: thickness, min: -10, max: 10 },
    envMapIntensity: { value: envMapIntensity, min: 0, max: 10 },
    transmission: { value: transmission, min: 0, max: 1 },
    ...(metalness !== undefined && {
      metalness: { value: metalness, min: 0, max: 1 },
    }),
  })
  const isSelected = !!store && store?.storeId === storeGUI?.storeId
  return (
    <RhombicDodecaedron {...props} userData={{ store }}>
      <meshPhysicalMaterial {...materialProps} />
      <Edges visible={isSelected} scale={1.1} renderOrder={1000}>
        <meshBasicMaterial transparent color='#333' depthTest={false} />
      </Edges>
    </RhombicDodecaedron>
  )
}

const Home: NextPage = () => {
  const { t, i18n } = useTranslation('common')
  const [setGUIStore] = useGlobalStore((state) => [state.setGUIStore])
  const [selected] = useGlobalStore((state) => [state.selectedCanvas])
  const perfData = useGlobalStore((state) => state.perfData)

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main style={{ margin: 'auto', padding: '50px 10px' }}>
        <h1>{t(`test`)}</h1>
        <Link href='/' locale={i18n.language === 'fr' ? 'en' : 'fr'}>
          Switch language
        </Link>
        <XCanvas
          dpr={[1, 2]}
          orthographic
          camera={{ position: [-10, 10, 10], zoom: 100 }}
        >
          <pointLight position={[10, 10, 10]} />
          <Suspense fallback={null}>
            <Select
              multiple
              box
              onChange={(obj) => {
                setGUIStore(obj[0]?.userData?.store)
              }}
            >
              <TrackedMesh />
            </Select>
          </Suspense>
          <Environment preset='city' />
          <OrbitControls
            makeDefault
            rotateSpeed={2}
            minPolarAngle={0}
            maxPolarAngle={Math.PI / 2.5}
          />
          <Sky />
        </XCanvas>
        <div>
          Selected Canvas: {selected || 'Select a canvas'}
          <br />
          Data:
          <br />
          {perfData?.log?.fps || ''}
        </div>
      </main>
    </div>
  )
}

export async function getStaticProps({ locale }: any) {
  return {
    props: {
      ...(await serverSideTranslations(locale, ['common', 'footer'])),
    },
  }
}
export default Home
